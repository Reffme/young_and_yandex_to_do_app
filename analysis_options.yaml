# analysis_options.yaml

# Lint rules that are included in the `flutter_lints` package.
# These rules encourage good coding practices and help identify potential issues.
# Activate or deactivate specific lint rules as needed.
include: package:flutter_lints/flutter.yaml

# Custom configuration
analyzer:
  exclude:
    # Exclude generated files from analysis
    - "**/*.g.dart"

linter:
  rules:
    # Pedantic rules are a set of lint rules that cover most aspects of the Dart language
    # and are recommended for all Dart or Flutter developers.
    # Activate or deactivate specific pedantic rules as needed.
    - always_declare_return_types
    - always_put_control_body_on_new_line
    - always_put_required_named_parameters_first
    - always_require_non_null_named_parameters
    - annotate_overrides
    - avoid_annotating_with_dynamic
    - avoid_empty_else
    - avoid_function_literals_in_foreach_calls
    - avoid_init_to_null
    - avoid_null_checks_in_equality_operators
    - avoid_returning_null
    - avoid_return_types_on_setters
    - avoid_single_cascade_in_expression_statements
    - avoid_types_on_closure_parameters
    - avoid_unused_constructor_parameters
    - avoid_void_async
    - await_only_futures
    - camel_case_extensions
    - cancel_subscriptions
    - close_sinks
    - control_flow_in_finally
    - empty_catches
    - empty_constructor_bodies
    - empty_statements
    - hash_and_equals
    - implementation_imports
    - library_prefixes
    - lines_longer_than_80_chars
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - null_closures
    - prefer_adjacent_string_concatenation
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_expression_function_bodies
#    - prefer_final_fields
#    - prefer_final_locals
#    - prefer_final_parameters
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_if_elements_to_conditional_expressions
    - prefer_if_null_operators
    - prefer_inlined_adds
    - prefer_int_literals
    - prefer_interpolation_to_compose_strings
    - prefer_iterable_whereType
    - prefer_null_aware_operators
    - prefer_relative_imports
    - prefer_single_quotes
    - prefer_spread_collections
    - prefer_typing_uninitialized_variables
    - slash_for_doc_comments
    - sort_constructors_first
    - test_types_in_equals
    - throw_in_finally
    - unnecessary_await_in_return
    - unnecessary_const
    - unnecessary_lambdas
    - unnecessary_new
    - unnecessary_null_aware_assignments
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_statements
    - unnecessary_string_escapes
    - unnecessary_this
    - use_full_hex_values_for_flutter_colors
    - use_function_type_syntax_for_parameters
    - use_key_in_widget_constructors
    - use_rethrow_when_possible
    - use_setters_to_change_properties
    - use_string_buffers
    - use_to_and_as_if_applicable
